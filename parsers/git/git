#!/bin/bash -evx

# Ensure OVERLAYS_CACHE_DIR does not end with a slash
OVERLAYS_CACHE_DIR=$(realpath -m "${OVERLAYS_CACHE_DIR}")

mkdir -p "${OVERLAYS_CACHE_DIR}"

repocount=$(${PARSERS}/config/getconfig overlays '#' )
for ((ridx=0; ridx<$repocount; ridx++)); do
	# shellcheck disable=SC2046
	if [[ "$(${PARSERS}/config/getconfig overlays $ridx sync-type)" == "git" ]]; then
		URI=$(${PARSERS}/config/getconfig overlays $ridx sync-uri)
		OVERLAY=$(${PARSERS}/config/getconfig overlays $ridx location)
		SHALLOW_SINCE=$(${PARSERS}/config/getconfig overlays $ridx '#clone-date' )

		# Normalize OVERLAY path
		OVERLAY=$(realpath -m "${OVERLAY}")

		mkdir -p "${OVERLAYS_CACHE_DIR}/$(dirname "${OVERLAY}")"

		(
			flock -e 200
			if [ -d "${OVERLAYS_CACHE_DIR}/${OVERLAY}" ]; then
				if GIT_DIR="${OVERLAYS_CACHE_DIR}/${OVERLAY}" git rev-parse --git-dir > /dev/null 2>&1; then
					echo "Updating existing repository: ${OVERLAYS_CACHE_DIR}/${OVERLAY}"
					GIT_DIR="${OVERLAYS_CACHE_DIR}/${OVERLAY}" git fetch --all --prune --progress
				else
					echo "Existing directory is not a valid Git repository, removing it..."
					rm -rf "${OVERLAYS_CACHE_DIR:?}/${OVERLAY}"
					echo "Cloning repository..."
					git clone --bare --progress --dissociate --no-reject-shallow \
						--reference-if-able="${OVERLAY}" "${URI}" "${OVERLAYS_CACHE_DIR}/${OVERLAY}"
				fi
			else
				echo "Repository does not exist, cloning..."
				git clone --bare --progress --dissociate --no-reject-shallow \
					--reference-if-able="${OVERLAY}" "${URI}" "${OVERLAYS_CACHE_DIR}/${OVERLAY}"
			fi
		) 200>"${OVERLAYS_CACHE_DIR}/${OVERLAY}.lock"

		# Normalize CHROOT_DIR path
		CHROOT_DIR=$(realpath -m "${CHROOT_DIR}")

		# Get extra options safely
		EXTRA_OPTS="$(${PARSERS}/config/getconfig overlays $ridx sync-git-clone-extra-opts? 2>/dev/null || echo '')"

		git clone --progress --dissociate --no-reject-shallow \
			--reference-if-able="${OVERLAYS_CACHE_DIR}/${OVERLAY}" \
			--shallow-since="${SHALLOW_SINCE}" ${EXTRA_OPTS} \
			"${URI}" "${CHROOT_DIR}/${OVERLAY}"

		pushd "${CHROOT_DIR}/${OVERLAY}"
			git checkout "$(${PARSERS}/config/getconfig overlays $ridx '#commit-hash?' )"
		popd
	fi
done


